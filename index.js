const {gameOptions, againOptions, startOptions} = require('./options');

const TelegramApi = require('node-telegram-bot-api');
const axios = require('axios');

const token = '5737606412:AAG7JAXN5nBwdBlHKNk4HPvLBEFSeD6dMvI';

const bot = new TelegramApi(token, {polling: true});

const farengToC = (farengate) => Math.round(farengate/37.8);

const chats = {};

const startGame = async (chatId) => {

  chats[chatId] = Math.floor(Math.random()*3 + 1);
  await bot.sendMessage(chatId, '–û—Ç–≥–∞–¥—ã–≤–∞–π—Ç–µ!', gameOptions)
};

const startInfo = async (chatId, msg) => {
  await bot.sendMessage(chatId, `–ú–µ–Ω—è –∑–æ–≤—É—Ç –î–µ–Ω—á–∏–∫, –∞ –í–∞—Å ${msg.from.first_name}`)
}

const startWeather= async (chatId) => {
  await bot.sendMessage(chatId, `–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É —É —Å–µ–±—è –≤ —Ä–µ–≥–∏–æ–Ω–µ, –ø—Ä–∏—à–ª–∏—Ç–µ —Å–≤–æ—ë –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ`);
}

const start = () => {
  bot.on('message', async (msg) => {
    console.log(msg);
    const text = msg.text;
    const chatId = msg.chat.id;


    bot.setMyCommands([
      {
        command: '/start', description: '–í –Ω–∞—á–∞–ª–æ'
      },
      {
        command: '/info', description: '–ó–Ω–∞–∫–æ–º—Å—Ç–≤–æ'
      },
      {
        command: '/game', description: '–ò–≥—Ä–∞'
      },
      {
        command: '/weather', description: '–ü–æ–≥–æ–¥–∞"'
      },
    ])

    if (text === '/start') {
      await bot.sendSticker(chatId, 'https://tlgrm.eu/_/stickers/22c/b26/22cb267f-a2ab-41e4-8360-fe35ac048c3b/192/1.webp');
      return bot.sendMessage(chatId, '–ß–∞—Ç–±–æ—Ç denpan –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –í–∞—Å. –í—ã–±–µ—Ä–µ—Ç–µ –≤ –º–µ–Ω—é –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –ø—É–Ω–∫—Ç.', startOptions);

    }

    if (text === '/info') {
      return startInfo(chatId, msg);
    }

    if (text === '/game') {
      await bot.sendMessage(chatId, `–°–µ–π—á–∞—Å —è –∑–∞–≥–∞–¥–∞—é —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 3, –∞ –í–∞–º –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –µ–≥–æ –æ—Ç–≥–∞–¥–∞—Ç—å üòè`);
      return startGame(chatId);
    }

    if (text === '/weather') {
      return startWeather(chatId);
    }

    if (msg.location) {
      const url = `https://api.openweathermap.org/data/2.5/weather?lat=${msg.location.latitude}&lon=${msg.location.longitude}&appid=67b5008e3c6240c8a741c2c506623565`;
      try {
        const resp = await axios(url);
        await bot.sendMessage(chatId, `–°–µ–π—á–∞—Å –≤ ${resp.data.name} ${farengToC(resp.data.main.temp)}¬∞, —Å–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ ${resp.data.wind.speed}–º/c`);
        return;
      } catch (err) {
        await bot.sendMessage(chatId, `–ù–µ –º–æ–≥—É –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ`);
        return
      }
    }

    return bot.sendMessage(chatId, '–Ø –í–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é');

  });

  bot.on('callback_query', async msg => {
    const data = msg.data;
    const chatId = msg.message.chat.id;

    if (data === '/game') {
      await bot.sendMessage(chatId, `–°–µ–π—á–∞—Å —è –∑–∞–≥–∞–¥–∞—é —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 3, –∞ –í–∞–º –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –µ–≥–æ –æ—Ç–≥–∞–¥–∞—Ç—å üòè`);
      return startGame(chatId);
    }

    if (data === '/info') {
      return startInfo(chatId, msg);
    }

    if (data === '/weather') {
      return startWeather(chatId);
    }

    if (data === '/again') {
      return startGame(chatId);
    }

    await bot.sendMessage(chatId, `–í—ã –≤—ã–±—Ä–∞–ª–∏ —á–∏—Å–ª–æ ${data}`);

    if (+data === +chats[chatId]) {
      return bot.sendMessage(chatId, `–ü—Ä–∞–≤–∏–ª—å–Ω–æ! –≠—Ç–æ —á–∏—Å–ª–æ ${chats[chatId]}. –í—ã —Å–ª—É—á–∞–π–Ω–æ –Ω–µ –ö–æ–ø–µ—Ä—Ñ–∏–ª—å–¥?ü§©`, againOptions);
    } else {
      return bot.sendMessage(chatId, `–ü–æ—á—Ç–∏ —É–≥–∞–¥–∞–ª–∏ üòï –ë–æ—Ç –∑–∞–≥–∞–¥–∞–ª —á–∏—Å–ª–æ ${chats[chatId]}. –í —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ –¥–æ–ª–∂–Ω–æ –ø–æ–≤–µ–∑—Ç–∏!`, againOptions);
    }
  })
};

start();

